@use "./breakpoints" as *;

@mixin position($position, $top, $right, $bottom, $left, $width, $height) {
    position: $position;
    top: $top;
    left: $left;
    bottom: $bottom;
    right: $right;
    width: $width;
    height: $height;
}

@mixin align($flex, $justify-content, $align-items, $height) {
    display: $flex;
    justify-content: $justify-content;
    align-items: $align-items;
    height: $height;
}

@mixin button($color1, $color2, $text-color, $heigh, $font-size, $border-radius, $paddingY, $paddingX) {
    background: linear-gradient(to right, $color1, $color2);
    color: $text-color;
    text-decoration: none;
    height: $heigh;
    line-height: $heigh;
    display: inline-block;
    font-size: $font-size;
    font-weight: 400;
    border-radius: $border-radius;
    padding: $paddingY $paddingX;
    border: none;
    outline: none;
    cursor: pointer;
    text-transform: uppercase;
}

@mixin toggleSpan ($bg, $width, $height, $mt) {
    display: block;
    background: $bg;
    width: $width;
    height: $height;
    margin-top: $mt;
    transition: all .3s linear;
}

@mixin ststus($bg, $color) {
    padding: .4rem 1.3rem;
    background-color: $bg;
    color: $color;
    border-radius: .3rem;
    font-size: 1.3rem;
    text-transform: capitalize;
}

@mixin responsive($breakpoint) {
    @if $breakpoint ==large {
        @media (max-width:$lg) {
            @content ;
        }
    }

    @if $breakpoint ==medium {
        @media (max-width:$md) {
            @content ;
        }
    }

    @if $breakpoint ==small {
        @media (max-width:$sm) {
            @content ;
        }
    }

    @if $breakpoint ==xsmall {
        @media (max-width:$xsm) {
            @content ;
        }
    }


}